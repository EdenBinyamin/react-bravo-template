import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { User } from '../models/User.model';
import { email, initialString } from '../types/authTypes';
import { authBuilder } from './authAsyncActions';

export const AUTH_SLICE = 'auth';

export interface AuthState {
  isLoading: boolean;
  email: email;
  password: initialString;
  user: User;
}

const initialState: AuthState = {
  isLoading: false,
  email: null,
  password: null,
  user: null,
};

export const authSlice = createSlice({
  name: 'auth',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    setEmail: (state, action: PayloadAction<email>) => {
      state.email = action.payload;
    },
    setPassword: (state, action: PayloadAction<string>) => {
      state.password = action.payload;
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: authBuilder,
});

export const { setEmail, setPassword } = authSlice.actions;
export default authSlice.reducer;
